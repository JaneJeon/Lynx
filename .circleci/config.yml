version: 2.1

orbs:
  node: circleci/node@5
  slack: circleci/slack@4

jobs:
  lint:
    resource_class: small # can't use multiple threads anyway
    docker:
      - &runner
        image: cimg/node:lts
        environment:
          NODE_ENV: test
          DATABASE_URL: postgres://knex@localhost/blink
          REDIS_URL: redis://localhost
    steps:
      - checkout
      - node/install-packages
      - run: npm run lint:prettier
      - run: npm run lint:eslint -- --format junit --output-file reports/eslint/results.xml
  test-frontend:
    resource_class: medium # jest is able to run tests in parallel
    docker:
      - *runner
    steps:
      - checkout
      - node/install-packages
      - run: npm run pretest
      - run:
          command: npm run test:nowatch:frontend -- --ci --reporters=jest-junit --reporters=default
          environment:
            JEST_JUNIT_OUTPUT_DIR: reports/jest-frontend
  test-backend:
    resource_class: medium # jest is able to run tests in parallel
    docker:
      - *runner
      - image: cimg/postgres:14.2
        environment:
          POSTGRES_DB: blink
          POSTGRES_USER: knex
      - image: cimg/redis:6.2
    steps:
      - checkout
      - node/install-packages
      - run: npm run pretest
      - run:
          command: npm run test:nowatch:backend -- --ci --reporters=jest-junit --reporters=default
          environment:
            JEST_JUNIT_OUTPUT_DIR: reports/jest-backend
  publish-tag:
    parameters:
      tag:
        type: string
    machine: &docker-machine
      image: ubuntu-2004:202107-02
    steps:
      - checkout
      - run: echo "Releasing tag << parameters.tag >>"
      - &docker-login
        run: echo $GHCR_TOKEN | docker login ghcr.io -u JaneJeon --password-stdin
      - run: docker build -t ghcr.io/janejeon/blink:<< parameters.tag >> .
      - run: docker image push ghcr.io/janejeon/blink:<< parameters.tag >>
  publish-semver:
    machine: *docker-machine
    steps:
      - checkout
      - run: ./scripts/get-tags.sh
      - run: echo "Releasing versions $MAJOR_TAG, $MINOR_TAG, and $PATCH_TAG"
      - *docker-login
      - run: docker build -t blink .
      - run: docker image tag blink ghcr.io/janejeon/blink:latest
      - run: docker image tag blink ghcr.io/janejeon/blink:$MAJOR_TAG
      - run: docker image tag blink ghcr.io/janejeon/blink:$MINOR_TAG
      - run: docker image tag blink ghcr.io/janejeon/blink:$PATCH_TAG
      - run: docker image push --all-tags ghcr.io/janejeon/blink

workflows:
  build:
    jobs:
      - &lint-job
        lint:
          post-steps:
            - &retrieve-junit
              store_test_results:
                path: reports
      - &frontend-job
        test-frontend: &test-config
          context: shared-vars
          requires:
            - lint
          post-steps:
            - *retrieve-junit
            - &notify-failure
              when:
                condition:
                  equal: [master, << pipeline.git.branch >>]
                steps:
                  - slack/notify:
                      event: fail
                      template: basic_fail_1
      - &backend-job
        test-backend:
          <<: *test-config
  release-nightly:
    triggers:
      - schedule:
          cron: '0 0 * * *' # every day at 12:00am UTC or around 7pm EST
          filters:
            branches:
              only: master
    jobs:
      - *lint-job
      - *frontend-job
      - *backend-job
      - publish-tag:
          tag: nightly
          context: shared-vars
          requires:
            - test-frontend
            - test-backend
          filters:
            branches:
              only: master
          post-steps:
            - *notify-failure
  release:
    jobs:
      - publish-semver:
          context: shared-vars
          filters:
            # CircleCI is so fucking dumb! https://discuss.circleci.com/t/workflow-job-with-tag-filter-being-run-for-every-commit/20762/3
            branches:
              ignore: /.*/
            tags:
              only: /^v.*$/
          post-steps:
            - *notify-failure
